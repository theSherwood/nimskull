ModuleStructs	sem/modulelowering.html#ModuleStructs	modulelowering: ModuleStructs	
Module	sem/modulelowering.html#Module	modulelowering: Module	
ModuleList	sem/modulelowering.html#ModuleList	modulelowering: ModuleList	
isFilled	sem/modulelowering.html#isFilled,Module	modulelowering: isFilled(m: Module): bool	
`[]`	sem/modulelowering.html#[].t,ModuleList,FileIndex	modulelowering: `[]`(list: ModuleList; i: FileIndex): Module	
systemModule	sem/modulelowering.html#systemModule,ModuleList	modulelowering: systemModule(modules: ModuleList): lent Module	
mainModule	sem/modulelowering.html#mainModule,ModuleList	modulelowering: mainModule(modules: ModuleList): lent Module	
closed	sem/modulelowering.html#closed.i,ModuleList	modulelowering: closed(modules: ModuleList): lent Module	
rclosed	sem/modulelowering.html#rclosed.i,ModuleList	modulelowering: rclosed(modules: ModuleList): lent Module	
takeModuleList	sem/modulelowering.html#takeModuleList,ModuleGraph	modulelowering: takeModuleList(graph: ModuleGraph): ModuleList	
setupModule	sem/modulelowering.html#setupModule,ModuleGraph,IdGenerator,PSym,seq[PNode],seq[PNode]	modulelowering: setupModule(graph: ModuleGraph; idgen: IdGenerator; m: PSym;\n            decls, imperative: seq[PNode]): Module	
collectPass	sem/modulelowering.html#collectPass	modulelowering: collectPass	
