pdkInt	vm/packed_env.html#pdkInt	PackedDataKind.pdkInt	
pdkIntLit	vm/packed_env.html#pdkIntLit	PackedDataKind.pdkIntLit	
pdkFloat	vm/packed_env.html#pdkFloat	PackedDataKind.pdkFloat	
pdkString	vm/packed_env.html#pdkString	PackedDataKind.pdkString	
pdkPtr	vm/packed_env.html#pdkPtr	PackedDataKind.pdkPtr	
pdkObj	vm/packed_env.html#pdkObj	PackedDataKind.pdkObj	
pdkArray	vm/packed_env.html#pdkArray	PackedDataKind.pdkArray	
pdkSet	vm/packed_env.html#pdkSet	PackedDataKind.pdkSet	
pdkField	vm/packed_env.html#pdkField	PackedDataKind.pdkField	
PackedDataKind	vm/packed_env.html#PackedDataKind	packed_env: PackedDataKind	
PackedDataNode	vm/packed_env.html#PackedDataNode	packed_env: PackedDataNode	
SliceListType	vm/packed_env.html#SliceListType	packed_env: SliceListType	
PackedVmType	vm/packed_env.html#PackedVmType	packed_env: PackedVmType	
PackedEnv	vm/packed_env.html#PackedEnv	packed_env: PackedEnv	
PackedEncoder	vm/packed_env.html#PackedEncoder	packed_env: PackedEncoder	
DataEncoder	vm/packed_env.html#DataEncoder	packed_env: DataEncoder	
mapList	vm/packed_env.html#mapList.t,seq[D],openArray[S],untyped,	packed_env: mapList[D, S](d: seq[D]; s: openArray[S]; it: untyped; code)	
startEncoding	vm/packed_env.html#startEncoding,DataEncoder,PackedEnv	packed_env: startEncoding(enc: var DataEncoder; e: PackedEnv)	
storeData	vm/packed_env.html#storeData,DataEncoder,PackedEnv,MirTree	packed_env: storeData(enc: var DataEncoder; e: var PackedEnv; tree: MirTree): int	
getIntVal	vm/packed_env.html#getIntVal,PackedEnv,PackedDataNode	packed_env: getIntVal(pe: PackedEnv; n: PackedDataNode): BiggestInt	
getFloatVal	vm/packed_env.html#getFloatVal,PackedEnv,PackedDataNode	packed_env: getFloatVal(pe: PackedEnv; n: PackedDataNode): BiggestFloat	
loadSliceList	vm/packed_env.html#loadSliceList,PackedEnv,uint32	packed_env: loadSliceList[T: SliceListType](p: PackedEnv; id: uint32): seq[Slice[T]]	
loadTypeInfos	vm/packed_env.html#loadTypeInfos,PackedEnv,seq[PVmType]	packed_env: loadTypeInfos(p: PackedEnv; types: seq[PVmType]): seq[VmTypeInfo]	
loadEnv	vm/packed_env.html#loadEnv,TCtx,PackedEnv	packed_env: loadEnv(dst: var TCtx; src: PackedEnv)	
init	vm/packed_env.html#init,PackedEncoder,seq[PVmType]	packed_env: init(enc: var PackedEncoder; types: seq[PVmType])	
storeEnv	vm/packed_env.html#storeEnv,PackedEncoder,PackedEnv,TCtx	packed_env: storeEnv(enc: var PackedEncoder; dst: var PackedEnv; c: TCtx)	
writeToFile	vm/packed_env.html#writeToFile,PackedEnv,AbsoluteFile	packed_env: writeToFile(p: PackedEnv; file: AbsoluteFile): RodFileError	
readFromFile	vm/packed_env.html#readFromFile,PackedEnv,AbsoluteFile	packed_env: readFromFile(p: var PackedEnv; file: AbsoluteFile): RodFileError	
