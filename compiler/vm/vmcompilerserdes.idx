deserializeRef	vm/vmcompilerserdes.html#deserializeRef,TCtx,HeapSlotHandle,PVmType,PType,PType,TLineInfo	vmcompilerserdes: deserializeRef(c: TCtx; slot: HeapSlotHandle; vt: PVmType; f, con: PType;\n               info: TLineInfo): PNode	
deserializeArray	vm/vmcompilerserdes.html#deserializeArray,TCtx,VmMemoryRegion,int,int,PVmType,PType,TLineInfo	vmcompilerserdes: deserializeArray(c: TCtx; m: VmMemoryRegion; count: int; stride: int;\n                 eTyp: PVmType; f: PType; info: TLineInfo): PNode	
deserialize	vm/vmcompilerserdes.html#deserialize,TCtx,LocHandle,PType,TLineInfo	vmcompilerserdes: deserialize(c: TCtx; handle: LocHandle; asType: PType; info: TLineInfo): PNode	
marshalFields	vm/vmcompilerserdes.html#marshalFields,TCtx,openArray[PNode],LocHandle	vmcompilerserdes: marshalFields(c: var TCtx; nodes: openArray[PNode]; dest: LocHandle)	
serialize	vm/vmcompilerserdes.html#serialize,TCtx,PNode,LocHandle,PType	vmcompilerserdes: serialize(c: var TCtx; n: PNode; dest: LocHandle; t: PType = nil)	
