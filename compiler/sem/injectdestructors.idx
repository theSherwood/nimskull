getOp	sem/injectdestructors.html#getOp,ModuleGraph,PType,TTypeAttachedOp	injectdestructors: getOp(g: ModuleGraph; t: PType; kind: TTypeAttachedOp): PSym	
buildVoidCall	sem/injectdestructors.html#buildVoidCall.t,MirBuilder,MirEnv,PSym,untyped	injectdestructors: buildVoidCall(bu: var MirBuilder; env: var MirEnv; p: PSym; body: untyped)	
genDestroy	sem/injectdestructors.html#genDestroy,MirBuilder,ModuleGraph,MirEnv,Value	injectdestructors: genDestroy(bu: var MirBuilder; graph: ModuleGraph; env: var MirEnv;\n           target: Value)	
shouldInjectDestructorCalls	sem/injectdestructors.html#shouldInjectDestructorCalls,PSym	injectdestructors: shouldInjectDestructorCalls(owner: PSym): bool	
injectDestructorCalls	sem/injectdestructors.html#injectDestructorCalls,ModuleGraph,IdGenerator,MirEnv,PSym,MirBody	injectdestructors: injectDestructorCalls(g: ModuleGraph; idgen: IdGenerator; env: var MirEnv;\n                      owner: PSym; body: var MirBody)	
Overview	sem/injectdestructors.html#overview	 Overview	
Ownership analysis	sem/injectdestructors.html#ownership-analysis	 Ownership analysis	
