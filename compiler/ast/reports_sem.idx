sgcuCallsUnsafe	ast/reports_sem.html#sgcuCallsUnsafe	SemGcUnsafetyKind.sgcuCallsUnsafe	
sgcuAccessesGcGlobal	ast/reports_sem.html#sgcuAccessesGcGlobal	SemGcUnsafetyKind.sgcuAccessesGcGlobal	
sgcuIndirectCallVia	ast/reports_sem.html#sgcuIndirectCallVia	SemGcUnsafetyKind.sgcuIndirectCallVia	
sgcuIndirectCallHere	ast/reports_sem.html#sgcuIndirectCallHere	SemGcUnsafetyKind.sgcuIndirectCallHere	
SemGcUnsafetyKind	ast/reports_sem.html#SemGcUnsafetyKind	reports_sem: SemGcUnsafetyKind	
ssefUsesGlobalState	ast/reports_sem.html#ssefUsesGlobalState	SemSideEffectCallKind.ssefUsesGlobalState	
ssefCallsSideEffect	ast/reports_sem.html#ssefCallsSideEffect	SemSideEffectCallKind.ssefCallsSideEffect	
ssefCallsViaHiddenIndirection	ast/reports_sem.html#ssefCallsViaHiddenIndirection	SemSideEffectCallKind.ssefCallsViaHiddenIndirection	
ssefCallsViaIndirection	ast/reports_sem.html#ssefCallsViaIndirection	SemSideEffectCallKind.ssefCallsViaIndirection	
ssefParameterMutation	ast/reports_sem.html#ssefParameterMutation	SemSideEffectCallKind.ssefParameterMutation	
SemSideEffectCallKind	ast/reports_sem.html#SemSideEffectCallKind	reports_sem: SemSideEffectCallKind	
SemNilHistory	ast/reports_sem.html#SemNilHistory	reports_sem: SemNilHistory	
SemReport	ast/reports_sem.html#SemReport	reports_sem: SemReport	
severity	ast/reports_sem.html#severity,SemReport	reports_sem: severity(report: SemReport): ReportSeverity	
reportSymbols	ast/reports_sem.html#reportSymbols,ReportKind,seq[PSym],PType,PNode	reports_sem: reportSymbols(kind: ReportKind; symbols: seq[PSym]; typ: PType = nil;\n              ast: PNode = nil): SemReport	
reportSem	ast/reports_sem.html#reportSem,ReportKind	reports_sem: reportSem(kind: ReportKind): SemReport	
reportAst	ast/reports_sem.html#reportAst,ReportKind,PNode,string,PType,PSym	reports_sem: reportAst(kind: ReportKind; ast: PNode; str: string = &quot;&quot;; typ: PType = nil;\n          sym: PSym = nil): SemReport	
reportTyp	ast/reports_sem.html#reportTyp,ReportKind,PType,PNode,PSym,string	reports_sem: reportTyp(kind: ReportKind; typ: PType; ast: PNode = nil; sym: PSym = nil;\n          str: string = &quot;&quot;): SemReport	
reportStr	ast/reports_sem.html#reportStr,ReportKind,string,PNode,PType,PSym	reports_sem: reportStr(kind: ReportKind; str: string; ast: PNode = nil; typ: PType = nil;\n          sym: PSym = nil): SemReport	
reportSym	ast/reports_sem.html#reportSym,ReportKind,PSym,PNode,string,PType	reports_sem: reportSym(kind: ReportKind; sym: PSym; ast: PNode = nil; str: string = &quot;&quot;;\n          typ: PType = nil): SemReport	
