lastSon	backend/compat.html#lastSon,CgNode	compat: lastSon(n: CgNode): CgNode	
skipConv	backend/compat.html#skipConv,CgNode	compat: skipConv(n: CgNode): CgNode	
getInt	backend/compat.html#getInt,CgNode	compat: getInt(n: CgNode): Int128	
getOrdValue	backend/compat.html#getOrdValue,CgNode	compat: getOrdValue(n: CgNode): Int128	
getCalleeMagic	backend/compat.html#getCalleeMagic,MirEnv,CgNode	compat: getCalleeMagic(env: MirEnv; callee: CgNode): TMagic	
getMagic	backend/compat.html#getMagic,MirEnv,CgNode	compat: getMagic(env: MirEnv; op: CgNode): TMagic	
isDiscriminantField	backend/compat.html#isDiscriminantField,CgNode	compat: isDiscriminantField(n: CgNode): bool	
isOfBranch	backend/compat.html#isOfBranch,CgNode	compat: isOfBranch(n: CgNode): bool	
isDeepConstExpr	backend/compat.html#isDeepConstExpr,CgNode	compat: isDeepConstExpr(n: CgNode): bool	
canRaiseConservative	backend/compat.html#canRaiseConservative,MirEnv,CgNode	compat: canRaiseConservative(env: MirEnv; fn: CgNode): bool	
toBitSet	backend/compat.html#toBitSet,ConfigRef,CgNode	compat: toBitSet(conf: ConfigRef; s: CgNode): TBitSet	
flattenStmts	backend/compat.html#flattenStmts,CgNode	compat: flattenStmts(n: CgNode): CgNode	
newSymNode	backend/compat.html#newSymNode,MirEnv,PSym	compat: newSymNode(env: MirEnv; s: PSym): CgNode	
newStrNode	backend/compat.html#newStrNode,sinkstring	compat: newStrNode(str: sink string): CgNode	
translate	backend/compat.html#translate,MirEnv,PNode	compat: translate(env: MirEnv; n: PNode): CgNode	
