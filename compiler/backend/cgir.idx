cnkInvalid	backend/cgir.html#cnkInvalid	CgNodeKind.cnkInvalid	
cnkEmpty	backend/cgir.html#cnkEmpty	CgNodeKind.cnkEmpty	
cnkType	backend/cgir.html#cnkType	CgNodeKind.cnkType	
cnkIntLit	backend/cgir.html#cnkIntLit	CgNodeKind.cnkIntLit	
cnkUIntLit	backend/cgir.html#cnkUIntLit	CgNodeKind.cnkUIntLit	
cnkFloatLit	backend/cgir.html#cnkFloatLit	CgNodeKind.cnkFloatLit	
cnkStrLit	backend/cgir.html#cnkStrLit	CgNodeKind.cnkStrLit	
cnkNilLit	backend/cgir.html#cnkNilLit	CgNodeKind.cnkNilLit	
cnkAstLit	backend/cgir.html#cnkAstLit	CgNodeKind.cnkAstLit	
cnkSym	backend/cgir.html#cnkSym	CgNodeKind.cnkSym	
cnkMagic	backend/cgir.html#cnkMagic	CgNodeKind.cnkMagic	
cnkCall	backend/cgir.html#cnkCall	CgNodeKind.cnkCall	
cnkTupleConstr	backend/cgir.html#cnkTupleConstr	CgNodeKind.cnkTupleConstr	
cnkObjConstr	backend/cgir.html#cnkObjConstr	CgNodeKind.cnkObjConstr	
cnkSetConstr	backend/cgir.html#cnkSetConstr	CgNodeKind.cnkSetConstr	
cnkArrayConstr	backend/cgir.html#cnkArrayConstr	CgNodeKind.cnkArrayConstr	
cnkClosureConstr	backend/cgir.html#cnkClosureConstr	CgNodeKind.cnkClosureConstr	
cnkRange	backend/cgir.html#cnkRange	CgNodeKind.cnkRange	
cnkBinding	backend/cgir.html#cnkBinding	CgNodeKind.cnkBinding	
cnkFieldAccess	backend/cgir.html#cnkFieldAccess	CgNodeKind.cnkFieldAccess	
cnkBracketAccess	backend/cgir.html#cnkBracketAccess	CgNodeKind.cnkBracketAccess	
cnkCheckedFieldAccess	backend/cgir.html#cnkCheckedFieldAccess	CgNodeKind.cnkCheckedFieldAccess	
cnkDeref	backend/cgir.html#cnkDeref	CgNodeKind.cnkDeref	
cnkAddr	backend/cgir.html#cnkAddr	CgNodeKind.cnkAddr	
cnkHiddenAddr	backend/cgir.html#cnkHiddenAddr	CgNodeKind.cnkHiddenAddr	
cnkDerefView	backend/cgir.html#cnkDerefView	CgNodeKind.cnkDerefView	
cnkConv	backend/cgir.html#cnkConv	CgNodeKind.cnkConv	
cnkHiddenConv	backend/cgir.html#cnkHiddenConv	CgNodeKind.cnkHiddenConv	
cnkObjDownConv	backend/cgir.html#cnkObjDownConv	CgNodeKind.cnkObjDownConv	
cnkObjUpConv	backend/cgir.html#cnkObjUpConv	CgNodeKind.cnkObjUpConv	
cnkCast	backend/cgir.html#cnkCast	CgNodeKind.cnkCast	
cnkChckRangeF	backend/cgir.html#cnkChckRangeF	CgNodeKind.cnkChckRangeF	
cnkChckRange64	backend/cgir.html#cnkChckRange64	CgNodeKind.cnkChckRange64	
cnkChckRange	backend/cgir.html#cnkChckRange	CgNodeKind.cnkChckRange	
cnkStringToCString	backend/cgir.html#cnkStringToCString	CgNodeKind.cnkStringToCString	
cnkCStringToString	backend/cgir.html#cnkCStringToString	CgNodeKind.cnkCStringToString	
cnkStmtList	backend/cgir.html#cnkStmtList	CgNodeKind.cnkStmtList	
cnkStmtListExpr	backend/cgir.html#cnkStmtListExpr	CgNodeKind.cnkStmtListExpr	
cnkVoidStmt	backend/cgir.html#cnkVoidStmt	CgNodeKind.cnkVoidStmt	
cnkPragmaStmt	backend/cgir.html#cnkPragmaStmt	CgNodeKind.cnkPragmaStmt	
cnkEmitStmt	backend/cgir.html#cnkEmitStmt	CgNodeKind.cnkEmitStmt	
cnkAsmStmt	backend/cgir.html#cnkAsmStmt	CgNodeKind.cnkAsmStmt	
cnkIfStmt	backend/cgir.html#cnkIfStmt	CgNodeKind.cnkIfStmt	
cnkRepeatStmt	backend/cgir.html#cnkRepeatStmt	CgNodeKind.cnkRepeatStmt	
cnkCaseStmt	backend/cgir.html#cnkCaseStmt	CgNodeKind.cnkCaseStmt	
cnkBlockStmt	backend/cgir.html#cnkBlockStmt	CgNodeKind.cnkBlockStmt	
cnkBreakStmt	backend/cgir.html#cnkBreakStmt	CgNodeKind.cnkBreakStmt	
cnkRaiseStmt	backend/cgir.html#cnkRaiseStmt	CgNodeKind.cnkRaiseStmt	
cnkReturnStmt	backend/cgir.html#cnkReturnStmt	CgNodeKind.cnkReturnStmt	
cnkTryStmt	backend/cgir.html#cnkTryStmt	CgNodeKind.cnkTryStmt	
cnkExcept	backend/cgir.html#cnkExcept	CgNodeKind.cnkExcept	
cnkFinally	backend/cgir.html#cnkFinally	CgNodeKind.cnkFinally	
cnkBranch	backend/cgir.html#cnkBranch	CgNodeKind.cnkBranch	
cnkDef	backend/cgir.html#cnkDef	CgNodeKind.cnkDef	
cnkAsgn	backend/cgir.html#cnkAsgn	CgNodeKind.cnkAsgn	
cnkFastAsgn	backend/cgir.html#cnkFastAsgn	CgNodeKind.cnkFastAsgn	
CgNodeKind	backend/cgir.html#CgNodeKind	cgir: CgNodeKind	
cnkWithoutItems	backend/cgir.html#cnkWithoutItems	cgir: cnkWithoutItems	
cnkWithItems	backend/cgir.html#cnkWithItems	cgir: cnkWithItems	
cnkLiterals	backend/cgir.html#cnkLiterals	cgir: cnkLiterals	
CgNode	backend/cgir.html#CgNode	cgir: CgNode	
len	backend/cgir.html#len,CgNode	cgir: len(n: CgNode): int	
`[]`	backend/cgir.html#[].t,CgNode,Natural	cgir: `[]`(n: CgNode; i: Natural): CgNode	
`[]`	backend/cgir.html#[].t,CgNode,BackwardsIndex	cgir: `[]`(n: CgNode; i: BackwardsIndex): CgNode	
items	backend/cgir.html#items.i,CgNode	cgir: items(n: CgNode): CgNode	
pairs	backend/cgir.html#pairs.i,CgNode	cgir: pairs(n: CgNode): (int, CgNode)	
sliceIt	backend/cgir.html#sliceIt.i,seq[T],Natural,Natural	cgir: sliceIt[T](x: seq[T]; lo, hi: Natural): (int, lent T)	
newStmt	backend/cgir.html#newStmt,CgNodeKind,TLineInfo,varargs[CgNode]	cgir: newStmt(kind: CgNodeKind; info: TLineInfo; kids: varargs[CgNode]): CgNode	
newExpr	backend/cgir.html#newExpr,CgNodeKind,TLineInfo,PType,varargs[CgNode]	cgir: newExpr(kind: CgNodeKind; info: TLineInfo; typ: PType; kids: varargs[CgNode]): CgNode	
newNode	backend/cgir.html#newNode,CgNodeKind	cgir: newNode(kind: CgNodeKind; info = unknownLineInfo; typ = PType(nil)): CgNode	
