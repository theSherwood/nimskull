no	sem/aliasanalysis.html#no	Ternary.no	
maybe	sem/aliasanalysis.html#maybe	Ternary.maybe	
yes	sem/aliasanalysis.html#yes	Ternary.yes	
Ternary	sem/aliasanalysis.html#Ternary	aliasanalysis: Ternary	
CmpLocsResult	sem/aliasanalysis.html#CmpLocsResult	aliasanalysis: CmpLocsResult	
Path	sem/aliasanalysis.html#Path	aliasanalysis: Path	
sameIndex	sem/aliasanalysis.html#sameIndex,MirNode,MirNode	aliasanalysis: sameIndex(a, b: MirNode): Ternary	
getRoot	sem/aliasanalysis.html#getRoot,MirTree,OpValue	aliasanalysis: getRoot(tree: MirTree; n: OpValue): OpValue	
isCursor	sem/aliasanalysis.html#isCursor,MirTree,Path	aliasanalysis: isCursor(tree: MirTree; path: Path): bool	
computePath	sem/aliasanalysis.html#computePath,MirTree,NodePosition	aliasanalysis: computePath(tree: MirTree; at: NodePosition): Path	
compare	sem/aliasanalysis.html#compare,MirTree,Path,Path	aliasanalysis: compare(body: MirTree; a, b: Path): CmpLocsResult	
isAPartOfB	sem/aliasanalysis.html#isAPartOfB,CmpLocsResult	aliasanalysis: isAPartOfB(r: CmpLocsResult): Ternary	
isBPartOfA	sem/aliasanalysis.html#isBPartOfA,CmpLocsResult	aliasanalysis: isBPartOfA(r: CmpLocsResult): Ternary	
isSame	sem/aliasanalysis.html#isSame,CmpLocsResult	aliasanalysis: isSame(r: CmpLocsResult): bool	
overlaps	sem/aliasanalysis.html#overlaps.t,CmpLocsResult	aliasanalysis: overlaps(r: CmpLocsResult): Ternary	
overlaps	sem/aliasanalysis.html#overlaps,MirTree,Path,Path	aliasanalysis: overlaps(tree: MirTree; a, b: Path): Ternary	
isPartOf	sem/aliasanalysis.html#isPartOf,MirTree,Path,Path	aliasanalysis: isPartOf(tree: MirTree; a, b: Path): Ternary	
